# state_demo.py
"""
Demonstra√ß√£o do padr√£o de projeto State no contexto do sistema AquiTemFCTE.
Autor: Eric Rabelo & Algusto Caldas
Data: 23/10/2025

Descri√ß√£o:
-----------
O programa simula o ciclo de vida de um produto dentro da plataforma AquiTemFCTE,
aplicando o padr√£o comportamental State. Cada estado define um comportamento distinto
para o produto e controla suas pr√≥prias transi√ß√µes v√°lidas.

Estados poss√≠veis:
- Dispon√≠vel: o produto pode ser reservado.
- Reservado: o produto pode ser vendido ou voltar a ficar dispon√≠vel.
- Vendido: estado final, nenhuma a√ß√£o adicional √© permitida.
"""

from abc import ABC, abstractmethod

# ======================================================
# Interface EstadoProduto
# ======================================================

class EstadoProduto(ABC):
    """Interface abstrata que define as a√ß√µes poss√≠veis sobre um produto."""

    def __init__(self, produto):
        self.produto = produto

    @abstractmethod
    def reservar(self):
        pass

    @abstractmethod
    def vender(self):
        pass

    @abstractmethod
    def cancelar(self):
        pass


# ======================================================
# Classe Contexto: Produto
# ======================================================

class Produto:
    """Contexto que mant√©m o estado atual e delega o comportamento."""

    def __init__(self, nome, preco):
        self.nome = nome
        self.preco = preco
        self.estado = Disponivel(self)

    def set_estado(self, novo_estado):
        """Atualiza o estado atual do produto."""
        self.estado = novo_estado

    # Delega√ß√£o de a√ß√µes
    def reservar(self):
        self.estado.reservar()

    def vender(self):
        self.estado.vender()

    def cancelar(self):
        self.estado.cancelar()

    def exibir_status(self):
        print(f"üì¶ Produto: {self.nome} | Estado atual: {self.estado.__class__.__name__}")


# ======================================================
# Estados Concretos
# ======================================================

class Disponivel(EstadoProduto):
    def reservar(self):
        print(f"‚úÖ O produto '{self.produto.nome}' foi reservado com sucesso!")
        self.produto.set_estado(Reservado(self.produto))

    def vender(self):
        print(f"‚ö†Ô∏è N√£o √© poss√≠vel vender diretamente. √â necess√°rio reservar antes.")
    
    def cancelar(self):
        print(f"‚ÑπÔ∏è O produto '{self.produto.nome}' j√° est√° dispon√≠vel.")


class Reservado(EstadoProduto):
    def reservar(self):
        print(f"‚ö†Ô∏è O produto '{self.produto.nome}' j√° est√° reservado.")
    
    def vender(self):
        print(f"üí∞ O produto '{self.produto.nome}' foi vendido!")
        self.produto.set_estado(Vendido(self.produto))
    
    def cancelar(self):
        print(f"‚Ü©Ô∏è A reserva do produto '{self.produto.nome}' foi cancelada. Voltou a ficar dispon√≠vel.")
        self.produto.set_estado(Disponivel(self.produto))


class Vendido(EstadoProduto):
    def reservar(self):
        print(f"‚ùå O produto '{self.produto.nome}' j√° foi vendido. N√£o √© poss√≠vel reserv√°-lo.")
    
    def vender(self):
        print(f"‚ùå O produto '{self.produto.nome}' j√° foi vendido anteriormente.")
    
    def cancelar(self):
        print(f"‚ùå O produto '{self.produto.nome}' j√° foi vendido. A venda n√£o pode ser cancelada.")


# ======================================================
# Demonstra√ß√£o Interativa
# ======================================================

def menu():
    print("\n=== Sistema de Demonstra√ß√£o do Padr√£o State ===")
    print("1 - Reservar produto")
    print("2 - Vender produto")
    print("3 - Cancelar a√ß√£o atual")
    print("4 - Exibir estado atual")
    print("0 - Sair")
    print("===============================================")


def main():
    produto = Produto("Livro de Engenharia de Software", 59.90)
    print(f"\nüõí Produto criado: {produto.nome} (R$ {produto.preco})")
    produto.exibir_status()

    while True:
        menu()
        opcao = input("Escolha uma op√ß√£o: ")

        if opcao == "1":
            produto.reservar()
        elif opcao == "2":
            produto.vender()
        elif opcao == "3":
            produto.cancelar()
        elif opcao == "4":
            produto.exibir_status()
        elif opcao == "0":
            print("Encerrando demonstra√ß√£o. üëã")
            break
        else:
            print("‚ùå Op√ß√£o inv√°lida! Tente novamente.")


if __name__ == "__main__":
    main()
